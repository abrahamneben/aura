# CI integration is largely adopted from Denis Demidov's VexCL. 
# URL: https://github.com/ddemidov/vexcl

sudo: required
language: cpp
dist: trusty
osx_image: xcode7.3

os:
        - linux
        - osx

compiler:
        - clang
        - gcc

branches:
        only: v2

before_install:
        - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get -qq update; fi
        - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; 
          then sudo apt-get -qq install 
          cmake 
          libboost-chrono-dev 
          libboost-date-time-dev 
          libboost-filesystem-dev
          libboost-system-dev 
          libboost-thread-dev 
          libboost-program-options-dev
          libboost-test-dev
          opencl-headers
          ; fi
        - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then bash buildprocess/amd_sdk.sh; fi
        - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then tar -xjf AMD-SDK.tar.bz2; fi
        - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then AMDAPPSDKROOT=${HOME}/AMDAPPSDK; fi
        - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export OPENCL_VENDOR_PATH=${AMDAPPSDKROOT}/etc/OpenCL/vendors; fi
        - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then mkdir -p ${OPENCL_VENDOR_PATH}; fi
        - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sh AMD-APP-SDK*.sh --tar -xf -C ${AMDAPPSDKROOT}; fi
        - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then echo libamdocl64.so > ${OPENCL_VENDOR_PATH}/amdocl64.icd; fi
        - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export LD_LIBRARY_PATH=${AMDAPPSDKROOT}/lib/x86_64:${LD_LIBRARY_PATH}; fi
        - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export CMAKE_LIBRARY_PATH=${AMDAPPSDKROOT}/lib/x86_64; fi
        - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then chmod +x ${AMDAPPSDKROOT}/bin/x86_64/clinfo; fi
        - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then ${AMDAPPSDKROOT}/bin/x86_64/clinfo; fi

matrix:
        exclude:
                - os: linux
                - os: osx
        include:
                - os: linux
                  env: AURA_BASE=OPENCL
                       AURA_UNIT_TEST_DEVICE=0
                  compiler: gcc
                - os: osx 
                  env: AURA_BASE=METAL
                       AURA_UNIT_TEST_DEVICE=0
                  compiler: clang 



script:
        - mkdir -p build && cd build
        - cmake -DAURA_BASE="$AURA_BASE" -DAURA_UNIT_TEST_DEVICE="$AURA_UNIT_TEST_DEVICE" ..
        - make all
        - test/test.basic
        - ctest
